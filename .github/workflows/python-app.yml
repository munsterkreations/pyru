#Python and Ruby libraries for "/tree/main/lib" && "/tree/main/lib/pyru" and Dependencies installations from requirements.txt file
name: Pyru CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint Python code
        run: |
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  setup-ruby:
       runs-on: ubuntu-latest
       steps:
       - name: Set up Ruby
         uses: ruby/setup-ruby@v1
         with:
          ruby-version: 2.6.5 

       - name: Lint Ruby code
         run: |
          # Add linting command for Ruby if needed

       - name: Run Ruby tests
         run: |
          # Add test command for Ruby if needed

  build-and-publish:
    name: Build and Publish
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build Python package
        run: |
          python setup.py sdist
         

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Build Ruby gem
        run: |
          gem build pyru.gemspec

      - name: Publish Python package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://upload.pypi.org/legacy/

      - name: Publish Ruby gem to RubyGems
        run: gem push your_gem_name-version.gem
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}

    
         
    
    
   
   
  
    
